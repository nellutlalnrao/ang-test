import React, { useState, useEffect } from "react";
import "./style.css";
import Digit from "./components/digit/index.js";
import Symbol from "./components/symbol/index.js";

export default function App() {
  const [remainingMoves, setRemainingMoves] = useState(2); // total shared moves
  const operations = ['+', '-', 'x', '/'];
  const [operPosition, setOperPosition] = useState(0);
  const [operVal, setOperVal] = useState();

  useEffect(() => {
    setOperVal(operations[operPosition]);
  }, [operPosition]);

  const consumeMove = () => {
    setRemainingMoves((prev) => Math.max(prev - 1, 0));
  };

  const updateOperand = () => {
    setOperPosition((prev) => (prev + 1) % operations.length);
  };

  return (
    <div style={styles.container}>
      <p style={styles.movesText}>
        Remaining Moves: {remainingMoves}
      </p>
      <div style={{ backgroundColor:'#000', borderRadius:'8px', boxShadow:'2px 2px 2px 2px #808080', 
        margin:'15px', paddingRight:'12px', paddingTop:'12px', paddingBottom:'12px' }}>
        <div style={styles.row}>
        <div style={styles.operatorBox}>
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="9" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="3" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="9" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="3" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
      </div>
      <div style={styles.row}>
        <div style={styles.operatorBox} onClick={updateOperand}>
          <b>{operVal}</b>
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="9" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="3" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="9" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="3" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
      </div>
      <div style={styles.row}>
        <div style={styles.operatorBox} onClick={updateOperand}>
          <b>{operVal}</b>
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="9" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="3" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="9" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="3" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
      </div>
      <div style={{ paddingLeft:'15px', paddingTop:'8px' }}>
        <div style={{ backgroundColor:'red', width:'100%', height:'5px' }}></div>
      </div>
      <div style={styles.row}>
        <div style={styles.operatorBox}>
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="9" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="3" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="9" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
        <div style={{ width:'80px'}}>
          <Digit num="3" remainingMoves={remainingMoves} consumeMove={consumeMove} />
        </div>
      </div>
      <div style={{ paddingLeft:'15px', paddingTop:'8px' }}>
        <div style={{ backgroundColor:'red', width:'100%', height:'5px' }}></div>
      </div>
      </div>
    </div>
  );
}

const styles = {
  container: {
    textAlign: 'center',
    fontFamily: 'Arial, sans-serif',
  },
  row: {
    display: 'flex',
    justifyContent: 'center',
  },
  operatorBox: {
    /* backgroundColor: '#000', */
    width:'36px',
    color: 'red',
    alignSelf:'flex-end',
    paddingLeft:'9px',
    paddingRight:'9px',
    paddingBottom:'12px',
    fontSize: '36px',
    cursor: 'pointer'
  },
  movesText: {
    fontWeight: 'bold',
    color: '#0f0',
    fontSize: '20px',
  }
};
